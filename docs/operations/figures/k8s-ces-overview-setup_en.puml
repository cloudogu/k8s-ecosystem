@startuml
!define CLOUDOGUURL https://raw.githubusercontent.com/cloudogu/plantuml-cloudogu-sprites/master

!includeurl CLOUDOGUURL/common.puml
!includeurl CLOUDOGUURL/dogus/cloudogu.puml
!includeurl CLOUDOGUURL/tools/k8s.puml
!define SECONDARY_COLOR #55EE55
!define MANUAL_INSTALLATION #yellow
!define MIXED_INSTALLATION #yellow|55EE55

'cloud cloudogusvc as "Cloudogu services" <<$cloudogu>>
cloud publicimgs as "public images\n(without Credentials)" #white
cloud github as "Github"

rectangle "Cluster" as cluster <<$k8s>> {
  rectangle "Namespace" as namespace <<$k8s>> #white {

    rectangle credentials as " " #white {
      file cert as "<<secret>>\n3rd-party or \nself signed \ncertificate" MIXED_INSTALLATION
      file creds1 as "<<secret>>\nDogu registry credentials" MANUAL_INSTALLATION
      file creds2 as "<<secret>>\nImage registry credentials" MANUAL_INSTALLATION
    }

    file setupjson as "<<configmap>>\nk8s-ces-setup-json" MANUAL_INSTALLATION

      note top of setupjson #ffffee
        contains usual
        setup.json
      end note


    file setupres as "<<many resources>>\nk8s-ces-setup" MANUAL_INSTALLATION
    
    file servdiscres as "<<deployment>>\nk8s-service-discovery" SECONDARY_COLOR
    file k8scesctlres as "<<deployment>>\nk8s-ces-control" SECONDARY_COLOR
    file doguratorres as "<<deployment>>\nk8s-dogu-operator" SECONDARY_COLOR
    file compOpres as "<<deployment>>\nk8s-component-operator" SECONDARY_COLOR
    file k8setcdres as "<<deployment>>\nk8s-etcd" SECONDARY_COLOR

    rectangle servdisc as "k8s-service-discovery" <<$cloudogu>>
    rectangle k8scesctl as "k8s-ces-control" <<$cloudogu>>
    rectangle dogurator as "k8s-dogu-operator" <<$cloudogu>>
    rectangle setup as "k8s-ces-setup" <<$cloudogu>>
    rectangle compOp as "k8s-component-operator" <<$cloudogu>>
    rectangle k8setcd as "k8s-etcd" <<$cloudogu>>
  }

  rectangle "longhorn" as namespacelonghorn <<$k8s>> #white {
    rectangle k8slonghorn as "k8s-longhorn" <<$cloudogu>>
  }
}

actor admin

'styling
creds1 -[hidden]d- creds2

github .. setupres 
admin <-- github : fetches from Github
admin --> setupres : patches with Namespaces\n for installation
admin --> setupjson : installs
admin --> credentials : installs
setupjson -> setup
servdisc -d-> cert : creates
servdisc <-> k8setcd : reads/writes \nselected certificate
setup -r-> compOpres : installs
compOp --d-> doguratorres : installs
compOp --d-> servdiscres : installs
compOp --d-> k8scesctlres : installs
compOp --d-> k8setcdres : installs

setupres --> setup         : creates
compOpres --> compOp       : creates
doguratorres --> dogurator : creates
servdiscres  --> servdisc  : creates
k8scesctlres --> k8scesctl : creates
k8setcdres --> k8setcd     : creates

setupres     <-.- publicimgs
compOpres    <-.- publicimgs
doguratorres <-.- publicimgs
servdiscres  <-.- publicimgs
k8scesctlres <-.- publicimgs
k8setcdres   <-.- publicimgs


legend right
  | Color | Meaning |
  |<SECONDARY_COLOR>| automatically created resource |
  |<MANUAL_INSTALLATION>        | manually created resource |
  |<#23a3dd>        | from K8s created workload |
endlegend

caption k8s-ces-setup initializes the cluster and prepares the way for a Cloudogu EcoSystem in Kubernetes
@enduml